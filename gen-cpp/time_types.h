/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef time_TYPES_H
#define time_TYPES_H

#include <thrift/Thrift.h>
#include <thrift/TApplicationException.h>
#include <thrift/protocol/TProtocol.h>
#include <thrift/transport/TTransport.h>

#include <thrift/cxxfunctional.h>




typedef struct _valuesStruct__isset {
  _valuesStruct__isset() : unixtime(false), t0(false), t1(false), t2(false), t3(false) {}
  bool unixtime;
  bool t0;
  bool t1;
  bool t2;
  bool t3;
} _valuesStruct__isset;

class valuesStruct {
 public:

  static const char* ascii_fingerprint; // = "9118FDD77343DD231D97C424A53D2DCF";
  static const uint8_t binary_fingerprint[16]; // = {0x91,0x18,0xFD,0xD7,0x73,0x43,0xDD,0x23,0x1D,0x97,0xC4,0x24,0xA5,0x3D,0x2D,0xCF};

  valuesStruct() : unixtime(), t0(0), t1(0), t2(0), t3(0) {
  }

  virtual ~valuesStruct() throw() {}

  std::string unixtime;
  int64_t t0;
  int64_t t1;
  int64_t t2;
  int64_t t3;

  _valuesStruct__isset __isset;

  void __set_unixtime(const std::string& val) {
    unixtime = val;
  }

  void __set_t0(const int64_t val) {
    t0 = val;
  }

  void __set_t1(const int64_t val) {
    t1 = val;
  }

  void __set_t2(const int64_t val) {
    t2 = val;
  }

  void __set_t3(const int64_t val) {
    t3 = val;
  }

  bool operator == (const valuesStruct & rhs) const
  {
    if (!(unixtime == rhs.unixtime))
      return false;
    if (!(t0 == rhs.t0))
      return false;
    if (!(t1 == rhs.t1))
      return false;
    if (!(t2 == rhs.t2))
      return false;
    if (!(t3 == rhs.t3))
      return false;
    return true;
  }
  bool operator != (const valuesStruct &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const valuesStruct & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(valuesStruct &a, valuesStruct &b);



#endif
